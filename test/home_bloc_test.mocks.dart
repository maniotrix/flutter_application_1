// Mocks generated by Mockito 5.4.2 from annotations
// in flutter_application_1/test/home_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:graphql_flutter/graphql_flutter.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

import 'home_bloc_test.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGraphQLClient_0 extends _i1.SmartFake implements _i2.GraphQLClient {
  _FakeGraphQLClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQueryResult_1<TParsed extends Object?> extends _i1.SmartFake
    implements _i2.QueryResult<TParsed> {
  _FakeQueryResult_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MockHomeRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMockHomeRepository extends _i1.Mock
    implements _i3.MockHomeRepository {
  MockMockHomeRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GraphQLClient get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeGraphQLClient_0(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.GraphQLClient);
  @override
  _i4.Future<_i2.QueryResult<Object?>> getHomeData() => (super.noSuchMethod(
        Invocation.method(
          #getHomeData,
          [],
        ),
        returnValue: _i4.Future<_i2.QueryResult<Object?>>.value(
            _FakeQueryResult_1<Object?>(
          this,
          Invocation.method(
            #getHomeData,
            [],
          ),
        )),
      ) as _i4.Future<_i2.QueryResult<Object?>>);
}
